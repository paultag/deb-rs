[package]
name = "deb"
version = "0.5.18"
edition = "2024"
authors = ["Paul Tagliamonte <paultag@debian.org>"]
license = "MIT"
homepage = "https://github.com/paultag/deb-rs"
description = "Utilities for working with files and formats commonly found when working with Debian's project tooling, or infrastructure."

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
full = [
  "chrono",
  "hex",
  "serde",
  "sequoia",
  "tokio"
]
chrono = ["dep:chrono"]
hex = ["dep:hex"]
serde = ["dep:serde"]
sequoia = ["dep:sequoia-openpgp", "dep:anyhow"]
tokio = ["dep:tokio"]

[dependencies]
anyhow = { version = "1.0", optional = true }
chrono = { version = "0.4", optional = true, features = ["serde"] }
hex = { version = "0.4", optional = true, features = ["serde"] }
pest = "2.7"
pest_derive = "2.8"

# We want rust crypto. The upside way outweighs the downside. We only
# do signature verification, so I'm not worried about leaking private
# key material. As for it being experimental - that is what it is.
sequoia-openpgp = { version = "2.0", optional = true, default-features = false, features = ["crypto-rust", "allow-experimental-crypto", "allow-variable-time-crypto"] }
serde = { version = "1.0", optional = true, features = ["derive"] }
tokio = { version = "1", features = ["io-util", "rt", "macros"], optional = true }
